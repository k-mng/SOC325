points_p_month <- data.frame(table(locations$month_year ), group = "month")
points_p_year <- data.frame(table(locations$year), group = "year")
## Check Points per day
head(points_p_day)
summary(points_p_day$Freq)
head(points_p_month)
summary(points_p_month$Freq)
head(points_p_year)
summary(points_p_year$Freq)
my_theme <- function(base_size = 12, base_family = "sans"){
theme_grey(base_size = base_size, base_family = base_family) +
theme(
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.title = element_text(size = 14),
panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
strip.background = element_rect(fill = "lightgrey", color = "grey", size = 1),
strip.text = element_text(face = "bold", size = 12, color = "navy"),
legend.position = "right",
legend.background = element_blank(),
panel.margin = unit(.5, "lines"),
panel.border = element_rect(color = "grey", fill = NA, size = 0.5)
)
}
points <- rbind(points_p_day[, -1], points_p_month[, -1], points_p_year[, -1])
ggplot(points, aes(x = group, y = Freq)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.3) +
geom_boxplot(aes(color = group), size = 1, outlier.colour = NA) +
facet_grid(group ~ ., scales = "free") + my_theme() +
theme(
legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5)
) +
labs(
x = "",
y = "Number of data points",
title = "How many data points did Google collect about me?",
subtitle = "Number of data points per day, month and year",
caption = "\nGoogle collected between 0 and 1500 data points per day
(median ~1400), between 0 and 45,000 per month (median ~42,000) and
between 56,000 and 170,000 per year (median ~115,000)."
)
my_theme <- function(base_size = 12, base_family = "sans"){
theme_grey(base_size = base_size, base_family = base_family) +
theme(
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.title = element_text(size = 14),
panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
strip.background = element_rect(fill = "lightgrey", color = "grey", size = 1),
strip.text = element_text(face = "bold", size = 12, color = "navy"),
legend.position = "right",
legend.background = element_blank(),
panel.margin = unit(.5, "lines"),
panel.border = element_rect(color = "grey", fill = NA, size = 0.5)
)
}
points <- rbind(points_p_day[, -1], points_p_month[, -1], points_p_year[, -1])
ggplot(points, aes(x = group, y = Freq)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.3) +
geom_boxplot(aes(color = group), size = 1, outlier.colour = NA) +
facet_grid(group ~ ., scales = "free") + my_theme() +
theme(
legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5)
) +
labs(
x = "",
y = "Number of data points",
title = "How many data points did Google collect about me?",
subtitle = "Number of data points per day, month and year",
caption = "\nGoogle collected between 0 and 1500 data points per day
(median ~1400), between 0 and 45,000 per month (median ~42,000) and
between 56,000 and 170,000 per year (median ~115,000)."
)
accuracy <- data.frame(accuracy = locations$accuracy, group = ifelse(locations$accuracy < 800, "high", ifelse(locations$accuracy < 5000, "middle", "low")))
accuracy$group <- factor(accuracy$group, levels = c("high", "middle", "low"))
ggplot(accuracy, aes(x = accuracy, fill = group)) +
geom_histogram() +
facet_grid(group ~ ., scales="free") +
my_theme() +
theme(
legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5)
) +
labs(
x = "Accuracy in metres",
y = "Count",
title = "How accurate is the location data?",
subtitle = "Histogram of accuracy of location points",
caption = "\nMost data points are pretty accurate,
but there are still many data points with a high inaccuracy.
These were probably from areas with bad satellite reception."
)
accuracy <- data.frame(accuracy = locations$accuracy, group = ifelse(locations$accuracy < 800, "high", ifelse(locations$accuracy < 5000, "middle", "low")))
accuracy$group <- factor(accuracy$group, levels = c("high", "middle", "low"))
ggplot(accuracy, aes(x = accuracy, fill = group)) +
geom_histogram() +
facet_grid(group ~ ., scales="free") +
my_theme() +
theme(
legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5)
) +
labs(
x = "Accuracy in metres",
y = "Count",
title = "How accurate is the location data?",
subtitle = "Histogram of accuracy of location points",
caption = "\nMost data points are pretty accurate,
but there are still many data points with a high inaccuracy.
These were probably from areas with bad satellite reception."
)
### This code wont run
### Turn eval=TRUE to run
#### Need a google API key to use this package
GGMAP_GOOGLE_API_KEY<- "[Your Key Here]"
register_google(key = GGMAP_GOOGLE_API_KEY)
## World
world<-get_googlemap(center = c(lon = 0, lat = 0)
, zoom = 1
, maptype="roadmap"
, scale = 2
, color = "bw")
maps2.Rda
### This code wont run
### Turn eval=TRUE to run
#### Need a google API key to use this package
GGMAP_GOOGLE_API_KEY<- "[Your Key Here]"
register_google(key = GGMAP_GOOGLE_API_KEY)
## World
world<-get_googlemap(center = c(lon = 0, lat = 0)
, zoom = 1
, maptype="roadmap"
, scale = 2
, color = "bw")
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
load("C:/Users/kmngu/Desktop/SOC-325-R/data/maps2.Rda")
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
world%>% ggmap()+ geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in the world",
caption = "\nA simple point plot shows recorded positions.")
spain%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom2%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom2%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Loads spain_zoom3
load(here("data","maps.Rda"))
## Plot a closer zoom of Madrid here
### See code above for how to do this
## Loads spain_zoom3
load(here("data","maps.Rda"))
## Plot a closer zoom of Madrid here
### See code above for how to do this
spain_zoom3%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Loads spain_zoom3
load(here("data","maps.Rda"))
## Plot a closer zoom of Madrid here
### See code above for how to do this
spain_zoom3%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Loads spain_zoom3
load(here("data","maps.Rda"))
## Plot a closer zoom of Madrid here
### See code above for how to do this
spain_zoom3%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom2%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Loads spain_zoom3
load(here("data","maps.Rda"))
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
library(jsonlite)
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
library(here)
library(jsonlite)
library(here)
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
world%>% ggmap()+ geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in the world",
caption = "\nA simple point plot shows recorded positions.")
## Run this code, to manage packages and install as needed.
# Install pacman
if (!require("pacman")) install.packages("pacman")
# p_load function loads packages if installed, or install then loads otherwise
pacman::p_load(jsonlite, ggmap,ggplot2, lubridate, zoo,here,tidyverse,kableExtra,ggmap)
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
world%>% ggmap()+ geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in the world",
caption = "\nA simple point plot shows recorded positions.")
spain%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom2%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Loads spain_zoom3
## Plot a closer zoom of Madrid here
### See code above for how to do this
spain_zoom3%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
### This code wont run
### Turn eval=TRUE to run
#### Need a google API key to use this package
GGMAP_GOOGLE_API_KEY<- "[Your Key Here]"
register_google(key = GGMAP_GOOGLE_API_KEY)
## World
world<-get_googlemap(center = c(lon = 0, lat = 0)
, zoom = 1
, maptype="roadmap"
, scale = 2
, color = "bw")
## Run this code, to manage packages and install as needed.
# Install pacman
if (!require("pacman")) install.packages("pacman")
# p_load function loads packages if installed, or install then loads otherwise
pacman::p_load(jsonlite, ggmap,ggplot2, lubridate, zoo,here,tidyverse,kableExtra,ggmap)
library(jsonlite)
library(here)
data <- fromJSON(here("data","location_history_102014.json"))
head(data[[1]])%>%kableExtra::kable()
locations = data[[1]]
## The coordinates are stored in E7 format and should be converted to regular GPS coordinates.
locations$lat = locations$latitudeE7 / 1e7
locations$lon = locations$longitudeE7 / 1e7
## Fix Date
locations$time = as.POSIXct(as.numeric(locations$timestampMs)/1000, origin = "1970-01-01")
locations$date <- as.Date(locations$time, '%Y/%m/%d',tz="America/Los_Angeles")
locations$year <- year(locations$date)
locations$month_year <- as.yearmon(locations$date)
## Count points per day, month and year
points_p_day <- data.frame(table(locations$date), group = "day")
points_p_month <- data.frame(table(locations$month_year ), group = "month")
points_p_year <- data.frame(table(locations$year), group = "year")
## Check Points per day
head(points_p_day)
summary(points_p_day$Freq)
head(points_p_month)
summary(points_p_month$Freq)
head(points_p_year)
summary(points_p_year$Freq)
my_theme <- function(base_size = 12, base_family = "sans"){
theme_grey(base_size = base_size, base_family = base_family) +
theme(
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.title = element_text(size = 14),
panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
strip.background = element_rect(fill = "lightgrey", color = "grey", size = 1),
strip.text = element_text(face = "bold", size = 12, color = "navy"),
legend.position = "right",
legend.background = element_blank(),
panel.margin = unit(.5, "lines"),
panel.border = element_rect(color = "grey", fill = NA, size = 0.5)
)
}
points <- rbind(points_p_day[, -1], points_p_month[, -1], points_p_year[, -1])
ggplot(points, aes(x = group, y = Freq)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.3) +
geom_boxplot(aes(color = group), size = 1, outlier.colour = NA) +
facet_grid(group ~ ., scales = "free") + my_theme() +
theme(
legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5)
) +
labs(
x = "",
y = "Number of data points",
title = "How many data points did Google collect about me?",
subtitle = "Number of data points per day, month and year",
caption = "\nGoogle collected between 0 and 1500 data points per day
(median ~1400), between 0 and 45,000 per month (median ~42,000) and
between 56,000 and 170,000 per year (median ~115,000)."
)
accuracy <- data.frame(accuracy = locations$accuracy, group = ifelse(locations$accuracy < 800, "high", ifelse(locations$accuracy < 5000, "middle", "low")))
accuracy$group <- factor(accuracy$group, levels = c("high", "middle", "low"))
ggplot(accuracy, aes(x = accuracy, fill = group)) +
geom_histogram() +
facet_grid(group ~ ., scales="free") +
my_theme() +
theme(
legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5)
) +
labs(
x = "Accuracy in metres",
y = "Count",
title = "How accurate is the location data?",
subtitle = "Histogram of accuracy of location points",
caption = "\nMost data points are pretty accurate,
but there are still many data points with a high inaccuracy.
These were probably from areas with bad satellite reception."
)
#####################
## Simple Map
#####################
load(here("data","maps.Rda"))
world%>% ggmap()+ geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in the world",
caption = "\nA simple point plot shows recorded positions.")
spain%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
spain_zoom2%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Loads spain_zoom3
## Plot a closer zoom of Madrid here
### See code above for how to do this
spain_zoom3%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
## Run this code, to manage packages and install as needed.
# Install pacman
if (!require("pacman")) install.packages("pacman")
# p_load function loads packages if installed, or install then loads otherwise
pacman::p_load(jsonlite, ggmap,ggplot2, lubridate, zoo,here,tidyverse,kableExtra,ggmap,spotifyr,ggjoy)
################
## Code Examples
################
## Load example data
load(here("data","spotify.Rda"))
## Loads spain_zoom3
load(here("data","maps2.Rda"))
## Plot a closer zoom of Madrid here
### See code above for how to do this
spain_zoom3%>%ggmap()+geom_point(data = locations, aes(x = lon, y = lat), alpha = 0.5, color = "red") +
theme(legend.position = "right") +
labs(
x = "Longitude",
y = "Latitude",
title = "Location history data points in Spain",
caption = "\nA simple point plot shows recorded positions.")
